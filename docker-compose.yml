version: '3.3'
services:
  postgres:
    container_name: postgres
    image: postgres
    restart: always
    ports:
      - "15432:5432"
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: root
      POSTGRES_DB: catalog
    volumes:
      - ./init:/docker-entrypoint-initdb.d/

  mongodb:
    container_name: mongodb
    image: mongo:4
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=admin
      - MONGODB_DATABASE=images
    restart: always
    ports:
      - "17017:27017"

  catalog-service:
    build: ./catalog-service
    ports:
      - "18081:8081"
    depends_on:
      - config-service
      - postgres
      - image-service
      - cache
    restart: on-failure

  config-service:
    build: ./config-service
    ports:
      - "18888:8888"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  discovery-service:
    build: ./discovery-service
    ports:
      - "18761:8761"

  image-service:
    build: ./image-service
    ports:
      - "18082:8082"
    depends_on:
      - config-service
      - kafka1
      - mongodb
    restart: on-failure

  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    ports:
      - "12181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo1:2888:3888

  kafka1:
    image: confluentinc/cp-kafka:5.1.2
    hostname: kafka1
    ports:
      - "19092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://kafka1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zoo1

  cache:
    image: redis:5
    ports:
      - "16379:6379"
